events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # Rate limiting to prevent abuse
    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=5r/s;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;

    server {
        listen       80;
        server_name  localhost;
        root         /usr/share/nginx/html;
        index        index.html index.htm;

        # Apply rate limiting
        limit_req zone=mylimit burst=10 nodelay;

        # Block suspicious user agents (bot protection)
        if ($http_user_agent ~* (ffuf|fuzz|sqlmap|nikto|crawler|scan|bot)) {
            return 403;
        }

        # Handle favicon requests efficiently - return empty 204 instead of 404
        location = /favicon.ico {
            log_not_found off;
            access_log off;
            return 204;
        }

        # Service worker with long-term caching
        location /sw.js {
            add_header Cache-Control "public, max-age=31536000";
            try_files $uri =404;
        }

        # Handle client-side routing
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Ensure index.html is never cached
        location = /index.html {
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
            expires off;
        }

        # Enhanced caching for static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 30d;
            add_header Cache-Control "public, max-age=2592000, must-revalidate";
            access_log off;
        }

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
}
